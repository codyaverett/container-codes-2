name: Security Scanning

on:
  push:
    branches: [main, master]
  pull_request:
  schedule:
    - cron: '0 2 * * 1'  # Weekly on Monday at 2 AM
  workflow_dispatch:

concurrency:
  group: security-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  security-events: write

jobs:
  security-scan:
    name: Security Content Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          curl -LO https://github.com/BurntSushi/ripgrep/releases/download/14.1.0/ripgrep_14.1.0-1_amd64.deb
          sudo dpkg -i ripgrep_14.1.0-1_amd64.deb

      - name: Run security scan
        run: make security-scan

      - name: Check for vulnerabilities
        run: make vulnerability-check

      - name: Secret scanning with TruffleHog
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD
          extra_args: --debug --only-verified

  dependency-scan:
    name: Dependency Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Python dependency check with pip-audit
        if: hashFiles('requirements.txt') != ''
        run: |
          python -m pip install --upgrade pip
          pip install pip-audit
          pip-audit --desc -r requirements.txt

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  container-security:
    name: Container Security Scan
    runs-on: ubuntu-latest
    if: hashFiles('compose.yml') != '' || hashFiles('Dockerfile') != '' || hashFiles('containers/*/Dockerfile') != ''
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build container image for scanning
        run: |
          if [ -f compose.yml ]; then
            docker compose build
          elif [ -f Dockerfile ]; then
            docker build -t security-scan:latest .
          fi

      - name: Run Hadolint on Dockerfiles
        uses: hadolint/hadolint-action@v3.1.0
        with:
          recursive: true
          ignore: DL3008,DL3009

      - name: Scan container with Trivy
        if: hashFiles('Dockerfile') != '' || hashFiles('containers/*/Dockerfile') != ''
        run: |
          # Install Trivy
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo "deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update
          sudo apt-get install -y trivy
          
          # Scan any built images
          for dockerfile in $(find . -name Dockerfile); do
            dir=$(dirname "$dockerfile")
            image_name=$(echo "$dir" | sed 's|./||' | sed 's|/|-|g')
            echo "Scanning $dockerfile"
            trivy image --severity HIGH,CRITICAL --exit-code 0 "$image_name:latest" || true
          done

  codeql-analysis:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read
    strategy:
      fail-fast: false
      matrix:
        language: ['python', 'javascript']
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3